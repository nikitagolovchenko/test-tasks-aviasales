{"version":3,"sources":["store/types.ts","store/actions/ticketActions.ts","components/Filter.tsx","components/SortButtons.tsx","utils/changeTicketData.ts","components/TicketItem.tsx","App.tsx","reportWebVitals.ts","store/reducers/TicketReducers.ts","store/reducers/rootReducer.ts","store/store.ts","index.tsx"],"names":["TicketActions","SortBtns","FilterBtns","ticketLoading","type","TICKET_LOADING","Filter","dispatch","useDispatch","useSelector","state","ticket","loading","filterBtns","checkHandler","e","filter","target","name","getState","allTickets","tickets","filterTickets","ALL","WITHOUT_TRANSFERS","el","segments","stops","length","ONE_TRANSFERS","TWO_TRANSFERS","THREE_TRANSFERS","TICKET_FILTERING","payload","TICKET_SORTING","sortBtns","activeBtn","Paper","Box","p","Typography","variant","btns","map","index","FormControlLabel","control","Checkbox","disabled","checked","onChange","color","label","text","useStyles","makeStyles","theme","root","width","marginBottom","spacing","flexDirection","breakpoints","up","down","borderRadius","shape","borderColor","palette","primary","light","flexGrow","btn","SortButtons","classes","sorting","sort","ticketSorting","ButtonGroup","className","size","Button","onClick","getDate","date","newDate","Date","year","getFullYear","month","getMonth","day","hours","getHours","minutes","getMinutes","getDuration","time","Math","floor","Number","getStops","changePrice","price","thousand","lessThousand","list","display","flexWrap","paddingBottom","paddingTop","listItem","paddingLeft","paddingRight","flex","listItemText","secondaryText","textTransform","TicketItem","mb","Card","CardActionArea","CardContent","alignItems","justifyContent","src","process","carrier","alt","List","ListItem","ListItemText","secondary","origin","destination","duration","App","useEffect","a","fetch","responseSearchId","json","searchId","stopFetch","fetchData","responseTickets","stop","TICKET_SUCCESS","position","overflow","py","CssBaseline","top","left","zIndex","LinearProgress","Container","maxWidth","textAlign","component","Grid","container","item","xs","sm","activeTickets","slice","limit","page","total","fullWidth","GET_MORE_TICKET","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","CHEAP","FAST","OPTIMAL","ticketReducer","action","b","reduce","acc","curr","minPrice","minDurationTicket","minDuration","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccf24e06.chunk.js","sourcesContent":["export enum TicketActions {\r\n  TICKET_LOADING = 'TICKET_LOADING',\r\n  TICKET_SUCCESS = 'TICKET_SUCCESS',\r\n  TICKET_SORTING = 'TICKET_SORTING',\r\n  TICKET_FILTERING = 'TICKET_FILTERING',\r\n  GET_MORE_TICKET = 'GET_MORE_TICKET',\r\n}\r\n\r\nexport enum SortBtns {\r\n  CHEAP = 'CHEAP',\r\n  FAST = 'FAST',\r\n  OPTIMAL = 'OPTIMAL',\r\n}\r\n\r\nexport enum FilterBtns {\r\n  ALL = 'ALL',\r\n  WITHOUT_TRANSFERS = 'WITHOUT_TRANSFERS',\r\n  ONE_TRANSFERS = 'ONE_TRANSFERS',\r\n  TWO_TRANSFERS = 'TWO_TRANSFERS',\r\n  THREE_TRANSFERS = 'THREE_TRANSFERS',\r\n}\r\n\r\ninterface Segments {\r\n  origin: string;\r\n  destination: string;\r\n  date: Date;\r\n  stops: [null | string];\r\n  duration: number;\r\n}\r\n\r\nexport interface Ticket {\r\n  price: number;\r\n  carrier: string;\r\n  segments: Segments[];\r\n}\r\n\r\nexport type SortBtn = SortBtns.CHEAP | SortBtns.FAST | SortBtns.OPTIMAL;\r\n\r\nexport type FilterBtn =\r\n  | FilterBtns.ALL\r\n  | FilterBtns.WITHOUT_TRANSFERS\r\n  | FilterBtns.TWO_TRANSFERS\r\n  | FilterBtns.ONE_TRANSFERS\r\n  | FilterBtns.TWO_TRANSFERS\r\n  | FilterBtns.THREE_TRANSFERS;\r\n\r\nexport interface TicketState {\r\n  tickets: Ticket[];\r\n  activeTickets: Ticket[];\r\n  loading: boolean;\r\n  sortBtns: {\r\n    btns: { name: SortBtn; text: string }[];\r\n    activeBtn: SortBtn;\r\n  };\r\n  filterBtns: {\r\n    btns: {name: FilterBtn, text: string}[];\r\n    activeBtn: FilterBtn;\r\n  };\r\n  limit: number;\r\n  page: number;\r\n  total: number;\r\n}\r\n\r\ninterface TicketLoading {\r\n  type: TicketActions.TICKET_LOADING;\r\n}\r\n\r\ninterface TicketSuccess {\r\n  type: TicketActions.TICKET_SUCCESS;\r\n  payload: Ticket[];\r\n}\r\n\r\ninterface TicketSorting {\r\n  type: TicketActions.TICKET_SORTING;\r\n  payload: SortBtn;\r\n}\r\n\r\ninterface TicketFiltering {\r\n  type: TicketActions.TICKET_FILTERING;\r\n  payload: {\r\n    filter: FilterBtn;\r\n    tickets: Ticket[];\r\n  }\r\n}\r\n\r\ninterface GetMoreTicket {\r\n  type: TicketActions.GET_MORE_TICKET;\r\n}\r\n\r\n\r\nexport type TicketAction =\r\n  | TicketLoading\r\n  | TicketSuccess\r\n  | TicketSorting\r\n  | TicketFiltering\r\n  | GetMoreTicket;\r\n","import { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '../reducers/rootReducer';\r\nimport {\r\n  FilterBtn,\r\n  FilterBtns,\r\n  SortBtn,\r\n  Ticket,\r\n  TicketAction,\r\n  TicketActions,\r\n} from '../types';\r\n\r\nexport const getTicket = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  null,\r\n  TicketAction\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(ticketLoading());\r\n\r\n    const responseSearchId = await fetch(\r\n      `${process.env.REACT_APP_API_SEARCH_ID}`\r\n    );\r\n    const { searchId } = await responseSearchId.json();\r\n    let stopFetch: boolean = false;\r\n    let allTickets: Ticket[] = [];\r\n\r\n    const fetchData = async (): Promise<any> => {\r\n      if (!stopFetch) {\r\n        try {\r\n          const responseTickets = await fetch(\r\n            `${process.env.REACT_APP_API_TICKETS}?searchId=${searchId}`\r\n          );\r\n\r\n          const tickets = await responseTickets.json();\r\n\r\n          stopFetch = tickets.stop;\r\n          allTickets = tickets.tickets;\r\n        } catch (error) {\r\n          return fetchData();\r\n        }\r\n\r\n        return fetchData();\r\n      } else {\r\n        return;\r\n      }\r\n    };\r\n\r\n    await fetchData();\r\n\r\n    dispatch({\r\n      type: TicketActions.TICKET_SUCCESS,\r\n      payload: allTickets,\r\n    });\r\n\r\n    dispatch({\r\n      type: TicketActions.TICKET_SORTING,\r\n      payload: getState().ticket.sortBtns.activeBtn,\r\n    });\r\n  };\r\n};\r\n\r\nconst ticketLoading = (): TicketAction => {\r\n  return {\r\n    type: TicketActions.TICKET_LOADING,\r\n  };\r\n};\r\n\r\nexport const ticketSorting = (sort: SortBtn): TicketAction => {\r\n  return {\r\n    type: TicketActions.TICKET_SORTING,\r\n    payload: sort,\r\n  };\r\n};\r\n\r\nexport const ticketFiltering = (\r\n  filter: FilterBtn\r\n): ThunkAction<void, RootState, null, TicketAction> => {\r\n  return (dispatch, getState) => {\r\n    const allTickets = getState().ticket.tickets;\r\n    let filterTickets: Ticket[] = [];\r\n\r\n    switch (filter) {\r\n      case FilterBtns.ALL:\r\n        filterTickets = allTickets;\r\n        break;\r\n\r\n      case FilterBtns.WITHOUT_TRANSFERS:\r\n        filterTickets = allTickets.filter(\r\n          el =>\r\n            el.segments[0].stops.length < 1 || el.segments[1].stops.length < 1\r\n        );\r\n        break;\r\n\r\n      case FilterBtns.ONE_TRANSFERS:\r\n        filterTickets = allTickets.filter(\r\n          el =>\r\n            el.segments[0].stops.length === 1 ||\r\n            el.segments[1].stops.length === 1\r\n        );\r\n        break;\r\n\r\n      case FilterBtns.TWO_TRANSFERS:\r\n        // eslint-disable-next-line\r\n        filterTickets = allTickets.filter(\r\n          el =>\r\n            (el.segments[0].stops.length < 3 &&\r\n              el.segments[0].stops.length > 1) ||\r\n            (el.segments[1].stops.length < 3 && el.segments[0].stops.length > 1)\r\n        );\r\n        break;\r\n\r\n      case FilterBtns.THREE_TRANSFERS:\r\n        filterTickets = allTickets.filter(\r\n          el =>\r\n            el.segments[0].stops.length > 2 || el.segments[1].stops.length > 2\r\n        );\r\n        break;\r\n\r\n      default:\r\n        filterTickets = allTickets;\r\n        break;\r\n    }\r\n\r\n    dispatch({\r\n      type: TicketActions.TICKET_FILTERING,\r\n      payload: {\r\n        filter: filter,\r\n        tickets: filterTickets,\r\n      },\r\n    });\r\n\r\n    dispatch({\r\n      type: TicketActions.TICKET_SORTING,\r\n      payload: getState().ticket.sortBtns.activeBtn,\r\n    });\r\n  };\r\n};\r\n\r\nexport const getMoreTicket = (): TicketAction => {\r\n  return {\r\n    type: TicketActions.GET_MORE_TICKET,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers/rootReducer';\r\nimport { ticketFiltering } from '../store/actions/ticketActions';\r\nimport { FilterBtn } from '../store/types';\r\n\r\nconst Filter: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, filterBtns } = useSelector(\r\n    (state: RootState) => state.ticket\r\n  );\r\n\r\n  const checkHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    dispatch(ticketFiltering(e.target.name as FilterBtn));\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box p={2}>\r\n        <Typography variant='button'>Количество пересадок</Typography>\r\n        {filterBtns.btns.map((el, index) => (\r\n          <Box key={index}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  disabled={loading}\r\n                  checked={el.name === filterBtns.activeBtn}\r\n                  onChange={checkHandler}\r\n                  name={el.name}\r\n                  color='primary'\r\n                />\r\n              }\r\n              label={el.text}\r\n            />\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { Button, ButtonGroup, makeStyles, Theme } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ticketSorting } from '../store/actions/ticketActions';\r\nimport { RootState } from '../store/reducers/rootReducer';\r\nimport { SortBtn } from '../store/types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexDirection: 'row'\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      '& $btn': {\r\n        borderRadius: theme.shape.borderRadius,\r\n        borderColor: theme.palette.primary.light,\r\n        marginBottom: theme.spacing(1),\r\n        '&:last-child': {\r\n          marginBottom: 0\r\n        }\r\n      }\r\n    },\r\n    '& > *': {\r\n      flexGrow: 1,\r\n    },\r\n  },\r\n  btn: {\r\n  }\r\n}));\r\n\r\nconst SortButtons: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    sortBtns: { btns, activeBtn },\r\n    loading,\r\n  } = useSelector((state: RootState) => state.ticket);\r\n\r\n  const sorting = (sort: SortBtn): void => {\r\n    dispatch(ticketSorting(sort));\r\n  };\r\n\r\n  return (\r\n    <ButtonGroup\r\n      color='primary'\r\n      className={classes.root}\r\n      size='large'\r\n      disabled={loading}\r\n    >\r\n      {btns.map(el => (\r\n        <Button\r\n          key={el.name}\r\n          name={el.name}\r\n          variant={el.name === activeBtn ? 'contained' : 'outlined'}\r\n          onClick={() => sorting(el.name)}\r\n          className={classes.btn}\r\n        >\r\n          {el.text}\r\n        </Button>\r\n      ))}\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default SortButtons;\r\n","export const getDate = (date: Date): string => {\r\n  const newDate = new Date(date);\r\n  const year = newDate.getFullYear();\r\n  const month =\r\n    newDate.getMonth() < 10 ? `0${newDate.getMonth()}` : newDate.getMonth();\r\n  const day =\r\n    newDate.getDate() < 10 ? `0${newDate.getDate()}` : newDate.getDate();\r\n  const hours =\r\n    newDate.getHours() < 10 ? `0${newDate.getHours()}` : newDate.getHours();\r\n  const minutes =\r\n    newDate.getMinutes() < 10\r\n      ? `0${newDate.getMinutes()}`\r\n      : newDate.getMinutes();\r\n  return `${day}.${month}.${year} - ${hours}:${minutes}`;\r\n};\r\n\r\nexport const getDuration = (time: number): string => {\r\n  let hours: number | string = Math.floor(time / 60);\r\n  hours = hours < 10 ? `0${hours}` : hours;\r\n\r\n  let minutes: number | string = Math.floor((time / 60 - Number(hours)) * 100);\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n  \r\n  return `${hours}ч ${minutes}м`;\r\n};\r\n\r\nexport const getStops = (stops: number): string => {\r\n  switch (stops) {\r\n    case 1:\r\n      return `${stops} пересадка`;\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n      return `${stops} пересадки`;\r\n    default:\r\n      return `${stops} пересадок`;\r\n  }\r\n};\r\n\r\nexport const changePrice = (price: number): string => {\r\n  if (price > 1000) {\r\n    const thousand = Math.floor(price / 1000);\r\n    const lessThousand = price - (thousand * 1000);\r\n    return `${thousand} ${lessThousand < 10 ? '00'+lessThousand : lessThousand < 100 ? '0'+lessThousand : lessThousand}`;\r\n  }\r\n  return `${price}`;\r\n}","import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Ticket } from '../store/types';\r\nimport { changePrice, getDate, getDuration, getStops } from '../utils/changeTicketData';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  list: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    paddingBottom: '0',\r\n    '&:last-child': {\r\n      paddingTop: '0',\r\n      paddingBottom: theme.spacing(1),\r\n    }\r\n  },\r\n  listItem: {\r\n    paddingLeft: '0',\r\n    paddingRight: '0',\r\n    flex: '1 1 33.33333%',\r\n  },\r\n  listItemText: {\r\n    display: 'flex',\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  secondaryText: {\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\n\r\ninterface TicketProps {\r\n  ticket: Ticket;\r\n}\r\n\r\nconst TicketItem: React.FC<TicketProps> = ({ ticket }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Box\r\n              display='flex'\r\n              alignItems='center'\r\n              justifyContent='space-between'\r\n              mb={0}\r\n            >\r\n              <Typography variant='h5' color='primary'>\r\n                {changePrice(ticket.price)} {'P'}\r\n              </Typography>\r\n              <img\r\n                src={`${process.env.REACT_APP_API_IMAGES}${ticket.carrier}.png`}\r\n                alt={ticket.carrier}\r\n              />\r\n            </Box>\r\n            <Box>\r\n              {ticket.segments.map((el, index) => (\r\n                <List className={classes.list} key={index}>\r\n                  <ListItem className={classes.listItem}>\r\n                    <ListItemText\r\n                      primary={getDate(el.date)}\r\n                      secondary={`${el.origin} - ${el.destination}`}\r\n                      classes={{\r\n                        root: classes.listItemText,\r\n                        secondary: classes.secondaryText,\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                  <ListItem className={classes.listItem}>\r\n                    <ListItemText\r\n                      primary={getDuration(el.duration)}\r\n                      secondary='В пути'\r\n                      classes={{\r\n                        root: classes.listItemText,\r\n                        secondary: classes.secondaryText,\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                  <ListItem className={classes.listItem}>\r\n                    <ListItemText\r\n                      primary={getDuration(el.duration)}\r\n                      secondary={getStops(el.stops.length)}\r\n                      classes={{\r\n                        root: classes.listItemText,\r\n                        secondary: classes.secondaryText,\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                </List>\r\n              ))}\r\n            </Box>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TicketItem;\r\n","import {\n  Box,\n  Container,\n  CssBaseline,\n  Grid,\n  LinearProgress,\n  Button,\n} from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Filter from './components/Filter';\nimport SortButtons from './components/SortButtons';\nimport TicketItem from './components/TicketItem';\nimport { RootState } from './store/reducers/rootReducer';\nimport { getMoreTicket, getTicket } from './store/actions/ticketActions';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const ticket = useSelector((state: RootState) => state.ticket);\n\n  useEffect(() => {\n    dispatch(getTicket());\n  }, []);\n\n  const showMoreTicket = () => {\n    dispatch(getMoreTicket());\n  }\n\n  return (\n    <Box width='100%' position='relative' overflow='hidden' py={6}>\n      <CssBaseline />\n      {ticket.loading && (\n        <Box position='absolute' top='0' left='0' width='100%' zIndex='100'>\n          <LinearProgress />\n        </Box>\n      )}\n\n      <Container maxWidth='md'>\n        <Box mb={3} textAlign='center' component='header'>\n          <img src='./logo.png' alt='aviasales' />\n        </Box>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={4}>\n            <Filter />\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <SortButtons />\n            <Box mb={3}>\n              {ticket.activeTickets\n                .slice(0, ticket.limit * ticket.page)\n                .map((el, index) => (\n                  <TicketItem key={index} ticket={el} />\n                ))}\n            </Box>\n            {ticket.total > 0 && ticket.limit * ticket.page < ticket.total && (\n              <Button\n                variant='contained'\n                size='large'\n                color='primary'\n                fullWidth\n                onClick={showMoreTicket}\n              >\n                Показать еще 5 билетов!\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  FilterBtns,\r\n  SortBtns,\r\n  TicketAction,\r\n  TicketActions,\r\n  TicketState,\r\n} from './../types';\r\n\r\nconst initialState: TicketState = {\r\n  tickets: [],\r\n  activeTickets: [],\r\n  loading: false,\r\n  sortBtns: {\r\n    btns: [\r\n      {\r\n        name: SortBtns.CHEAP,\r\n        text: 'Самый дешевый',\r\n      },\r\n      {\r\n        name: SortBtns.FAST,\r\n        text: 'Самый быстрый',\r\n      },\r\n      {\r\n        name: SortBtns.OPTIMAL,\r\n        text: 'Оптимальный',\r\n      },\r\n    ],\r\n    activeBtn: SortBtns.CHEAP,\r\n  },\r\n  filterBtns: {\r\n    btns: [\r\n      {\r\n        name: FilterBtns.ALL,\r\n        text: 'Все',\r\n      },\r\n      {\r\n        name: FilterBtns.WITHOUT_TRANSFERS,\r\n        text: 'Без пересадок',\r\n      },\r\n      {\r\n        name: FilterBtns.ONE_TRANSFERS,\r\n        text: '1 пересадка',\r\n      },\r\n      {\r\n        name: FilterBtns.TWO_TRANSFERS,\r\n        text: '2 пересадки',\r\n      },\r\n      {\r\n        name: FilterBtns.THREE_TRANSFERS,\r\n        text: '3 пересадки',\r\n      },\r\n    ],\r\n    activeBtn: FilterBtns.ALL,\r\n  },\r\n  limit: 5,\r\n  page: 1,\r\n  total: 0,\r\n};\r\n\r\nconst ticketReducer = (\r\n  state = initialState,\r\n  action: TicketAction\r\n): TicketState => {\r\n  switch (action.type) {\r\n    case TicketActions.TICKET_LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case TicketActions.TICKET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        tickets: action.payload,\r\n        activeTickets: action.payload,\r\n        total: action.payload.length,\r\n      };\r\n\r\n    case TicketActions.GET_MORE_TICKET:\r\n      return { ...state, page: state.page + 1 };\r\n\r\n    case TicketActions.TICKET_SORTING:\r\n      switch (action.payload) {\r\n        case SortBtns.CHEAP:\r\n          return {\r\n            ...state,\r\n            activeTickets: state.activeTickets.sort(\r\n              (a, b) => a.price - b.price\r\n            ),\r\n            sortBtns: { ...state.sortBtns, activeBtn: action.payload },\r\n          };\r\n\r\n        case SortBtns.FAST:\r\n          return {\r\n            ...state,\r\n            activeTickets: state.activeTickets.sort(\r\n              (a, b) =>\r\n                a.segments[0].duration +\r\n                a.segments[1].duration -\r\n                (b.segments[0].duration + b.segments[1].duration)\r\n            ),\r\n            sortBtns: { ...state.sortBtns, activeBtn: action.payload },\r\n          };\r\n\r\n        case SortBtns.OPTIMAL:\r\n          const { price: minPrice } = state.activeTickets.reduce((acc, curr) =>\r\n            acc.price < curr.price ? acc : curr\r\n          );\r\n          const minDurationTicket = state.activeTickets.reduce((acc, curr) =>\r\n            acc.segments[0].duration + acc.segments[1].duration <\r\n            curr.segments[0].duration + curr.segments[1].duration\r\n              ? acc\r\n              : curr\r\n          );\r\n          const minDuration: number =\r\n            minDurationTicket.segments[0].duration +\r\n            minDurationTicket.segments[1].duration;\r\n\r\n          return {\r\n            ...state,\r\n            activeTickets: state.activeTickets.sort(\r\n              (a, b) =>\r\n                ((a.price * 100) / minPrice +\r\n                  ((a.segments[0].duration + a.segments[1].duration) * 100) /\r\n                    minDuration) /\r\n                  2 -\r\n                ((b.price * 100) / minPrice +\r\n                  ((b.segments[0].duration + b.segments[1].duration) * 100) /\r\n                    minDuration) /\r\n                  2\r\n            ),\r\n            sortBtns: { ...state.sortBtns, activeBtn: action.payload },\r\n          };\r\n\r\n        default:\r\n          return { ...state };\r\n      }\r\n\r\n    case TicketActions.TICKET_FILTERING:\r\n      return {\r\n        ...state,\r\n        activeTickets: action.payload.tickets,\r\n        filterBtns: { ...state.filterBtns, activeBtn: action.payload.filter },\r\n        total: action.payload.tickets.length,\r\n        page: 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ticketReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport ticketReducer from './TicketReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  ticket: ticketReducer\r\n})\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}